{
	"compiler": {
		"version": "0.8.20+commit.a1b79de6"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_pkCA_x",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "_pkCA_y",
						"type": "bytes32"
					},
					{
						"internalType": "uint8",
						"name": "_t",
						"type": "uint8"
					},
					{
						"internalType": "uint8",
						"name": "_n",
						"type": "uint8"
					},
					{
						"internalType": "string",
						"name": "_hashSpec",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "pkCA_x",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "pkCA_y",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "t",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "n",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "hashSpec",
						"type": "string"
					}
				],
				"name": "ParamsPublished",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "getAllParams",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "x",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "y",
						"type": "bytes32"
					},
					{
						"internalType": "uint8",
						"name": "t",
						"type": "uint8"
					},
					{
						"internalType": "uint8",
						"name": "n",
						"type": "uint8"
					},
					{
						"internalType": "string",
						"name": "hash",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getPublicKey",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getPublicKeyBytes",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getThresholdConfig",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "t",
						"type": "uint8"
					},
					{
						"internalType": "uint8",
						"name": "n",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "hashSpec",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pkCA_x",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pkCA_y",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "thresholdT",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalNodesN",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Optimized for gas efficiency using immutable storage",
			"kind": "dev",
			"methods": {
				"constructor": {
					"params": {
						"_hashSpec": "Hash function specification (e.g., \"Keccak256\")",
						"_n": "Total number of CA nodes",
						"_pkCA_x": "X coordinate of CA public key (32 bytes)",
						"_pkCA_y": "Y coordinate of CA public key (32 bytes)",
						"_t": "Threshold (minimum signers required)"
					}
				},
				"getPublicKey()": {
					"returns": {
						"_0": "x coordinate, y coordinate"
					}
				},
				"getPublicKeyBytes()": {
					"returns": {
						"_0": "Full uncompressed public key"
					}
				},
				"getThresholdConfig()": {
					"returns": {
						"t": "(threshold), n (total nodes)"
					}
				}
			},
			"title": "ParamRegistry",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"constructor": {
					"notice": "Deploy with CA public key split into x and y coordinates"
				},
				"getAllParams()": {
					"notice": "Get all parameters at once (gas efficient)"
				},
				"getPublicKey()": {
					"notice": "Get CA public key as separate coordinates"
				},
				"getPublicKeyBytes()": {
					"notice": "Get CA public key as concatenated bytes (64 bytes)"
				},
				"getThresholdConfig()": {
					"notice": "Get threshold configuration"
				}
			},
			"notice": "Stores immutable CA consortium public key and threshold configuration",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/ParamRegistry.sol": "ParamRegistry"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/ParamRegistry.sol": {
			"keccak256": "0x702833dbaa425724035da1befdf7c3809ca0c2f6c95153f6a7f5858102c61e73",
			"license": "MIT",
			"urls": [
				"bzz-raw://150000f9a2e907df4bcc4e79a6e3eb7e4990bbea418666a14c5e27189cb09561",
				"dweb:/ipfs/QmfMPgXZf3cQoHyL6ukhNpfPyCQEpZspsvTRbm2eJH9cid"
			]
		}
	},
	"version": 1
}